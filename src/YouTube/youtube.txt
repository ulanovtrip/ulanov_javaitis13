1.1 Составить классы для сущностей:

 Video:
  - Название
  - Кол-во лайков
  - Кол-во дизлайков
  - List<Comment>
  - Длительность видео
  - annotations.User author

 Comment
  - Текст
  - Кол-во лайков
  - Кол-во дизлайков
  - annotations.User author

 User
  - List<Video>
  - FIO
  - кол-во заработанных денег = (вычисляется как сумма количество лайков умноженная на позицию в рейтинге видео)
  - List<Comment>


1.2 Генераторы и принтеры:
  - Самостоятельно придумать (можно сделать по аналогии с предыдущим заданием) способы генерации сущностей
  - в рамках Вашей системы
  - Можно как заготовить данные заранее, так и генерировать их на лету используя класс SecuredRandom
  - Классы принтеры пишутся на Ваше усмотрение


1.3 Запросы:
  - В рамках системы необходимо реализовать класс, который будет способен выполнять следующие запросы:

   1) Рейтинг видео ( сортировка по лайкам и если одинаковое количество лайков по дизлайкам)
    - данный метод должен возвращать List<Video>, содержащий видео в отсортированном порядке

   2) Рейтинг самых богатых пользователей ( суммарный заработок от всех видео)
    - данный метод должен возвращать List<annotations.User>, содержащий список пользователей отсортированный
    в порядке убывания по заработанным деньгам.

   3) Вывести самые задизлайканные комментарии (топ 10 самых богатых пользователей):
    - Данный метод принимает на вход список самых богатых пользователей
    - Данный список возвращает List<Comment> содержащий в порядке убывания по дизлайкам самые задизлайканные комментарии
    - Важно, что если у человека уже есть комментарий попавший в итоговый результат, его комментарии не должны
    - участвовать в последующей сортировке.
    - т.е если у Ивана Иванович уже есть комментарий с самым большим числом дизлайков,
    - и он попал в итоговый список, другие комментарии Ивана Ивановича рассматриваться как кандидаты на попадание
    - в этот список не должны.